<?xml version='1.0' encoding='UTF-8' ?>
<!-- was: <?xml version="1.0" encoding="UTF-8"?> -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

    <bean class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping"/>
    <context:component-scan base-package="controller"/>
    <mvc:resources mapping="/css/**" location="css"/>
    <mvc:resources mapping="/images/**" location="images"/>
    <mvc:resources mapping="/js/**" location="js"/>
    <mvc:resources mapping="/html/**" location="/"/>
    <mvc:annotation-driven/>
    
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
            <property name="dataSource" ref="dataSource" />
            <property name="mappingResources">
                <list>
                    <value>domain/Ctdonhang.hbm.xml</value>
                    <value>domain/Donhang.hbm.xml</value>
                    <value>domain/Khachhang.hbm.xml</value>
                    <value>domain/Nhasanxuat.hbm.xml</value>
                    <value>domain/Sanpham.hbm.xml</value>
                    <value>domain/Loaisanpham.hbm.xml</value>
                    <value>domain/Thongtindichvu.hbm.xml</value>
                    <value>domain/User.hbm.xml</value>
                </list>
            </property>
            
            <property name="hibernateProperties">
               <props>
                  <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                  <prop key="hibernate.show_sql">true</prop>
                 
               </props>
            </property>
        </bean>
     
     <tx:annotation-driven transaction-manager="transactionManager"/>
        <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager"
        p:sessionFactory-ref="sessionFactory"/>
        
        <!--cac service data-->
        <bean id="sanphamService" class="service.SanphamService">
            <constructor-arg> <ref bean="sessionFactory"/></constructor-arg>
        </bean>
        <bean id="loaisanphamService" class="service.LoaisanphamService">
            <constructor-arg> <ref bean="sessionFactory"/></constructor-arg>
        </bean>
        <bean id="nhasanxuatService" class="service.NhasanxuatService">
            <constructor-arg> <ref bean="sessionFactory"/></constructor-arg>
        </bean>
        <bean id="userService" class="service.UserService">
            <constructor-arg> <ref bean="sessionFactory"/></constructor-arg>
        </bean>
        <bean id="donhangService" class="service.DonhangService">
            <constructor-arg> <ref bean="sessionFactory"/></constructor-arg>
        </bean>
        <bean id="khachhangService" class="service.KhachhangService">
            <constructor-arg> <ref bean="sessionFactory"/></constructor-arg>
        </bean>
        <bean id="dichvuService" class="service.DichvuService">
            <constructor-arg> <ref bean="sessionFactory"/></constructor-arg>
        </bean>
    <!--
    Most controllers will use the ControllerClassNameHandlerMapping above, but
    for the index controller we are using ParameterizableViewController, so we must
    define an explicit mapping for it.
    -->
    
     <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
            <property name="maxUploadSize" value="5000000000"/>
    </bean>
    
    <bean id="messageSource" 
            class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="/WEB-INF/resource/messages" />
    </bean>
        
    <bean id="viewResolver"  
        class="org.springframework.web.servlet.view.UrlBasedViewResolver">  
        <property name="viewClass">  
            <value>  
                org.springframework.web.servlet.view.tiles3.TilesView  
            </value>  
        </property>  
    </bean>  
    <bean id="tilesConfigurer"  
        class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">  
        <property name="definitions">  
            <list>  
                <value>/WEB-INF/tiles.xml</value>  
            </list>  
        </property>  
    </bean>

</beans>
